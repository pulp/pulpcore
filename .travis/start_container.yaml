# Ansible playbook to start the pulp service container and its supporting services
---
- hosts: localhost
  gather_facts: false
  vars_files:
    - vars/main.yaml
  tasks:
    - name: "Create Settings Directories"
      file:
        path: "{{ item }}"
        state: directory
        mode: "0755"
      loop:
        - settings
        - ~/.config/pulp_smash

    - name: "Generate Pulp Settings"
      template:
        src: settings.py.j2
        dest: settings/settings.py

    - name: "Configure pulp-smash"
      copy:
        src: smash-config.json
        dest: ~/.config/pulp_smash/settings.json

    - name: "Setup docker networking"
      docker_network:
        name: pulp_ci_bridge

    - name: "Start Service Containers"
      docker_container:
        name: "{{ item.name }}"
        image: "{{ item.image }}"
        auto_remove: true
        recreate: true
        privileged: false
        networks:
          - name: pulp_ci_bridge
            aliases: "{{ item.name }}"
        volumes: "{{ item.volumes | default(omit) }}"
        env: "{{ item.env | default(omit) }}"
        command: "{{ item.command | default(omit) }}"
        state: started
      loop: "{{ services | default([]) }}"

    - name: "Retrieve Docker Network Info"
      docker_network_info:
        name: pulp_ci_bridge
      register: pulp_ci_bridge_info

    - name: "Update /etc/hosts"
      lineinfile:
        path: /etc/hosts
        regexp: "\\s{{ item.value.Name }}\\s*$"
        line: "{{ item.value.IPv4Address | ipaddr('address') }}\t{{ item.value.Name }}"
      loop: "{{ pulp_ci_bridge_info.network.Containers | dict2items }}"
      become: true

    - name: "Create Pulp Bucket"
      amazon.aws.s3_bucket:
        aws_access_key: "{{ minio_access_key }}"
        aws_secret_key: "{{ minio_secret_key }}"
        s3_url: "http://minio:9000"
        region: eu-central-1
        name: pulp3
        state: present
      when: s3_test | default(false)

    - block:
        - name: "Wait for Pulp"
          uri:
            url: "http://pulp/pulp/api/v3/status/"
            follow_redirects: none
          register: result
          until: result.status == 200
          retries: 6
          delay: 5
      rescue:
        - name: "Output pulp container log"
          command: "docker logs pulp"
          failed_when: true

    - name: "Set pulp password in .netrc"
      copy:
        dest: "~/.netrc"
        content: |
          machine pulp
          login admin
          password password

- hosts: pulp
  gather_facts: false
  tasks:
    - name: "Set pulp admin password"
      command:
        cmd: "pulpcore-manager reset-admin-password --password password"
...
