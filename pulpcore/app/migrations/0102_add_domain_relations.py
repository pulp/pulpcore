# Generated by Django 3.2.18 on 2023-02-14 18:57

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import pulpcore.app.models.content
import pulpcore.app.models.fields
import pulpcore.app.models.storage
import pulpcore.app.models.upload
import pulpcore.app.util


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0101_add_domain'),
    ]

    operations = [
        migrations.AddField(
            model_name='alternatecontentsource',
            name='pulp_domain',
            field=models.ForeignKey(default=pulpcore.app.util.get_domain_pk, on_delete=django.db.models.deletion.PROTECT, to='core.domain'),
        ),
        migrations.AddField(
            model_name='artifact',
            name='pulp_domain',
            field=models.ForeignKey(default=pulpcore.app.util.get_domain_pk, on_delete=django.db.models.deletion.PROTECT, to='core.domain'),
        ),
        migrations.AddField(
            model_name='content',
            name='pulp_domain',
            field=models.ForeignKey(default=pulpcore.app.util.get_domain_pk, on_delete=django.db.models.deletion.PROTECT, to='core.domain'),
        ),
        migrations.AddField(
            model_name='contentguard',
            name='pulp_domain',
            field=models.ForeignKey(default=pulpcore.app.util.get_domain_pk, on_delete=django.db.models.deletion.PROTECT, to='core.domain'),
        ),
        migrations.AddField(
            model_name='distribution',
            name='pulp_domain',
            field=models.ForeignKey(default=pulpcore.app.util.get_domain_pk, on_delete=django.db.models.deletion.PROTECT, to='core.domain'),
        ),
        migrations.AddField(
            model_name='grouprole',
            name='domain',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.domain'),
        ),
        migrations.AddField(
            model_name='publication',
            name='pulp_domain',
            field=models.ForeignKey(default=pulpcore.app.util.get_domain_pk, on_delete=django.db.models.deletion.PROTECT, to='core.domain'),
        ),
        migrations.AddField(
            model_name='pulptemporaryfile',
            name='pulp_domain',
            field=models.ForeignKey(default=pulpcore.app.util.get_domain_pk, on_delete=django.db.models.deletion.PROTECT, to='core.domain'),
        ),
        migrations.AddField(
            model_name='remote',
            name='pulp_domain',
            field=models.ForeignKey(default=pulpcore.app.util.get_domain_pk, on_delete=django.db.models.deletion.PROTECT, related_name='remotes', to='core.domain'),
        ),
        migrations.AddField(
            model_name='remoteartifact',
            name='pulp_domain',
            field=models.ForeignKey(default=pulpcore.app.util.get_domain_pk, on_delete=django.db.models.deletion.PROTECT, to='core.domain'),
        ),
        migrations.AddField(
            model_name='repository',
            name='pulp_domain',
            field=models.ForeignKey(default=pulpcore.app.util.get_domain_pk, on_delete=django.db.models.deletion.PROTECT, to='core.domain'),
        ),
        migrations.AddField(
            model_name='task',
            name='pulp_domain',
            field=models.ForeignKey(default=pulpcore.app.util.get_domain_pk, on_delete=django.db.models.deletion.CASCADE, to='core.domain'),
        ),
        migrations.AddField(
            model_name='taskgroup',
            name='pulp_domain',
            field=models.ForeignKey(default=pulpcore.app.util.get_domain_pk, on_delete=django.db.models.deletion.CASCADE, to='core.domain'),
        ),
        migrations.AddField(
            model_name='upload',
            name='pulp_domain',
            field=models.ForeignKey(default=pulpcore.app.util.get_domain_pk, on_delete=django.db.models.deletion.PROTECT, to='core.domain'),
        ),
        migrations.AddField(
            model_name='upstreampulp',
            name='pulp_domain',
            field=models.ForeignKey(default=pulpcore.app.util.get_domain_pk, on_delete=django.db.models.deletion.PROTECT, to='core.domain'),
        ),
        migrations.AddField(
            model_name='upstreampulp',
            name='domain',
            field=models.TextField(null=True),
        ),
        migrations.AddField(
            model_name='userrole',
            name='domain',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.domain'),
        ),
        migrations.AlterField(
            model_name='alternatecontentsource',
            name='name',
            field=models.TextField(db_index=True),
        ),
        migrations.AlterField(
            model_name='artifact',
            name='file',
            field=pulpcore.app.models.fields.ArtifactFileField(max_length=255, storage=pulpcore.app.models.storage.DomainStorage, upload_to=pulpcore.app.models.content.Artifact.storage_path),
        ),
        migrations.AlterField(
            model_name='artifact',
            name='sha256',
            field=models.CharField(db_index=True, max_length=64),
        ),
        migrations.AlterField(
            model_name='artifact',
            name='sha384',
            field=models.CharField(db_index=True, max_length=96, null=True),
        ),
        migrations.AlterField(
            model_name='artifact',
            name='sha512',
            field=models.CharField(db_index=True, max_length=128, null=True),
        ),
        migrations.AlterField(
            model_name='contentguard',
            name='name',
            field=models.TextField(db_index=True),
        ),
        migrations.AlterField(
            model_name='distribution',
            name='base_path',
            field=models.TextField(),
        ),
        migrations.AlterField(
            model_name='distribution',
            name='name',
            field=models.TextField(db_index=True),
        ),
        migrations.AlterField(
            model_name='pulptemporaryfile',
            name='file',
            field=pulpcore.app.models.fields.ArtifactFileField(max_length=255, storage=pulpcore.app.models.storage.DomainStorage, upload_to=pulpcore.app.models.content.PulpTemporaryFile.storage_path),
        ),
        migrations.AlterField(
            model_name='remote',
            name='name',
            field=models.TextField(db_index=True),
        ),
        migrations.AlterField(
            model_name='repository',
            name='name',
            field=models.TextField(db_index=True),
        ),
        migrations.AlterField(
            model_name='uploadchunk',
            name='file',
            field=models.FileField(max_length=255, storage=pulpcore.app.models.storage.DomainStorage, upload_to=pulpcore.app.models.upload.UploadChunk.storage_path),
        ),
        migrations.AlterField(
            model_name='upstreampulp',
            name='name',
            field=models.TextField(db_index=True),
        ),
        migrations.AlterUniqueTogether(
            name='alternatecontentsource',
            unique_together={('name', 'pulp_domain')},
        ),
        migrations.AlterUniqueTogether(
            name='artifact',
            unique_together={('sha256', 'pulp_domain'), ('sha384', 'pulp_domain'), ('sha512', 'pulp_domain')},
        ),
        migrations.AlterUniqueTogether(
            name='contentguard',
            unique_together={('name', 'pulp_domain')},
        ),
        migrations.AlterUniqueTogether(
            name='distribution',
            unique_together={('name', 'pulp_domain'), ('base_path', 'pulp_domain')},
        ),
        migrations.AlterUniqueTogether(
            name='grouprole',
            unique_together={('group', 'role', 'content_type', 'object_id', 'domain')},
        ),
        migrations.AlterUniqueTogether(
            name='remote',
            unique_together={('name', 'pulp_domain')},
        ),
        migrations.AlterUniqueTogether(
            name='remoteartifact',
            unique_together={('content_artifact', 'remote', 'pulp_domain')},
        ),
        migrations.AlterUniqueTogether(
            name='repository',
            unique_together={('name', 'pulp_domain')},
        ),
        migrations.AlterUniqueTogether(
            name='upstreampulp',
            unique_together={('name', 'pulp_domain')},
        ),
        migrations.AlterUniqueTogether(
            name='userrole',
            unique_together={('user', 'role', 'content_type', 'object_id', 'domain')},
        ),
    ]
