# WARNING: DO NOT EDIT!
#
# This file was generated by plugin_template, and is managed by it. Please use
# './plugin-template --github pulpcore' to update this file.
#
# For more info visit https://github.com/pulp/plugin_template
---
name: Pulp Nightly CI/CD
on:
  schedule:
    # * is a special character in YAML so you have to quote this string
    # runs at 3:00 UTC daily
    - cron: '00 3 * * *'

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        env:
          - TEST: pulp
          - TEST: docs
          - TEST: s3
          - TEST: bindings

    steps:
      - uses: actions/checkout@v2
        with:
          # by default, it uses a depth of 1
          # this fetches all history so that we can read each commit
          fetch-depth: 0

      - uses: actions/setup-python@v2
        with:
          python-version: "3.7"
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: "2.6"

      - name: Install httpie
        run: |
          echo ::group::HTTPIE
          sudo apt-get update -yq
          sudo -E apt-get -yq --no-install-suggests --no-install-recommends install httpie
          echo ::endgroup::
          echo "HTTPIE_CONFIG_DIR=$GITHUB_WORKSPACE/.ci/assets/httpie/" >> $GITHUB_ENV
          echo "TEST=${{ matrix.env.TEST }}" >> $GITHUB_ENV

      - name: Before Install
        run: .github/workflows/scripts/before_install.sh
        shell: bash

      - name: Install
        run: .github/workflows/scripts/install.sh
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
        shell: bash

      - name: Before Script
        run: |
          .github/workflows/scripts/before_script.sh

      - name: Setting secrets
        run: python3 .github/workflows/scripts/secrets.py "$SECRETS_CONTEXT"
        env:
          SECRETS_CONTEXT: ${{ toJson(secrets) }}

      - name: Script
        run: .github/workflows/scripts/script.sh
        shell: bash

  publish:
    runs-on: ubuntu-latest
    needs: test

    env:
      TEST: publish

    steps:
      - uses: actions/checkout@v2
        with:
          # by default, it uses a depth of 1
          # this fetches all history so that we can read each commit
          fetch-depth: 0

      - uses: actions/setup-python@v2
        with:
          python-version: "3.7"

      - uses: actions/setup-ruby@v1
        with:
          ruby-version: "2.6"

      - name: Install httpie
        run: |
          echo ::group::HTTPIE
          sudo apt-get update -yq
          sudo -E apt-get -yq --no-install-suggests --no-install-recommends install httpie
          echo ::endgroup::
          echo "HTTPIE_CONFIG_DIR=$GITHUB_WORKSPACE/.ci/assets/httpie/" >> $GITHUB_ENV

      - name: Install python dependencies
        run: |
          echo ::group::PYDEPS
          pip install wheel
          echo ::endgroup::

      - name: Before Install
        run: .github/workflows/scripts/before_install.sh
        shell: bash

      - name: Install
        run: .github/workflows/scripts/install.sh
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
        shell: bash

      - name: Before Script
        run: .github/workflows/scripts/before_script.sh

      - name: Setting secrets
        run: python3 .github/workflows/scripts/secrets.py "$SECRETS_CONTEXT"
        env:
          SECRETS_CONTEXT: ${{ toJson(secrets) }}

      
      - name: Publish nightly client to rubygems
        run: .ci/scripts/publish_client_gem.sh
        shell: bash
      

      
      - name: Publish nightly client to pypi
        run: .ci/scripts/publish_client_pypi.sh
        shell: bash
      

      
      - name: Publish nightly docs
        run: .ci/scripts/publish_docs.sh nightly ${GITHUB_REF##*/}
      

      - name: After failure
        if: failure()
        run: |
          http --timeout 30 --check-status --pretty format --print hb http://pulp/pulp/api/v3/status/ || true
          docker images || true
          docker ps -a || true
          docker logs pulp || true
          docker exec pulp ls -latr /etc/yum.repos.d/ || true
          docker exec pulp cat /etc/yum.repos.d/* || true
