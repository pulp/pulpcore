# WARNING: DO NOT EDIT!
#
# This file was generated by plugin_template, and is managed by it. Please use
# './plugin-template --github pulpcore' to update this file.
#
# For more info visit https://github.com/pulp/plugin_template

---
name: "Core PR static checks"
on:
  pull_request_target:
    types: ["opened", "synchronize", "reopened"]

# This workflow runs with elevated permissions.
# Do not even think about running a single bit of code from the PR.
# Static analysis should be fine however.

concurrency:
  group: "${{ github.event.pull_request.number }}-${{ github.workflow }}"
  cancel-in-progress: true

jobs:
  apply_labels:
    runs-on: "ubuntu-latest"
    name: "Label PR"
    permissions:
      pull-requests: "write"
    steps:
      - uses: "actions/checkout@v4"
        with:
          fetch-depth: 0
      - uses: "actions/setup-python@v5"
        with:
          python-version: "3.11"
      - name: "Determine PR labels"
        run: |
          pip install GitPython==3.1.42
          git fetch origin ${{ github.event.pull_request.head.sha }}
          python .ci/scripts/pr_labels.py "origin/${{ github.base_ref }}" "${{ github.event.pull_request.head.sha }}" >> "$GITHUB_ENV"
      - uses: "actions/github-script@v7"
        name: "Apply PR Labels"
        with:
          script: |
            const { ADD_LABELS, REMOVE_LABELS } = process.env;

            if (REMOVE_LABELS.length) {
              for await (const labelName of REMOVE_LABELS.split(",")) {
                try {
                  await github.rest.issues.removeLabel({
                    issue_number: context.issue.number,
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    name: labelName,
                  });
                } catch(err) {
                }
              }
            }
            if (ADD_LABELS.length) {
              await github.rest.issues.addLabels({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: ADD_LABELS.split(","),
              });
            }
...
