# WARNING: DO NOT EDIT!
#
# This file was generated by plugin_template, and is managed by it. Please use
# './plugin-template --github pulpcore' to update this file.
#
# For more info visit https://github.com/pulp/plugin_template

---
name: "Core CI"
on: {pull_request: {branches: ['*']}}

concurrency:
  group: ${{ github.ref_name }}-${{ github.workflow }}
  cancel-in-progress: true

defaults:
  run:
    working-directory: "pulpcore"

jobs:
  check-commits:
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v4"
        with:
          fetch-depth: 0
          path: "pulpcore"
      - uses: "actions/setup-python@v4"
        with:
          python-version: "3.11"
      - name: "Install python dependencies"
        run: |
          echo ::group::PYDEPS
          pip install requests pygithub
          echo ::endgroup::
      - name: "Check commit message"
        if: github.event_name == 'pull_request'
        env:
          PY_COLORS: "1"
          ANSIBLE_FORCE_COLOR: "1"
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          GITHUB_CONTEXT: "${{ github.event.pull_request.commits_url }}"
        run: |
          .github/workflows/scripts/check_commit.sh
      - name: "Verify requirements files"
        run: |
          python .ci/scripts/check_requirements.py

  lint:
    uses: "./.github/workflows/lint.yml"

  build:
    needs: "lint"
    uses: "./.github/workflows/build.yml"

  test:
    needs: "build"
    uses: "./.github/workflows/test.yml"

  deprecations:
    runs-on: "ubuntu-latest"
    if: github.base_ref == 'main'
    needs: "test"
    steps:
      - name: "Create working directory"
        run: |
          mkdir -p "pulpcore"
        working-directory: "."
      - name: "Download Deprecations"
        uses: actions/download-artifact@v3
        with:
          name: "deprecations"
          path: "pulpcore"
      - name: "Print deprecations"
        run: |
          cat deprecations-*.txt | sort -u
          ! cat deprecations-*.txt | grep '[^[:space:]]'

  ready-to-ship:
    # This is a dummy dependent task to have a single entry for the branch protection rules.
    runs-on: "ubuntu-latest"
    needs:
      - "check-commits"
      - "lint"
      - "test"
    if: "always()"
    steps:
      - name: "Collect needed jobs results"
        working-directory: "."
        run: |
          echo '${{toJson(needs)}}' | jq -r 'to_entries[]|select(.value.result!="success")|.key + ": " + .value.result'
          echo '${{toJson(needs)}}' | jq -e 'to_entries|map(select(.value.result!="success"))|length == 0'
          echo "CI says: Looks good!"
